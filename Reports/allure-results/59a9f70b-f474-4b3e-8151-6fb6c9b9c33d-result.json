{"name": "test_addexistingcampaign", "status": "failed", "statusDetails": {"message": "AssertionError: Error occurred while adding campaign\nassert 'Campaign wit...ready exists.' == 'Campaign cre... successfully'\n  \n  - Campaign created successfully\n  + Campaign with title This test title already exists.", "trace": "self = <TestCases.test_campaign.Test_campaign object at 0x00000189BC3B57E0>, setup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"dcf9ab806dd6a2ba10f25f362c73eda7\")>\nlogin_fixture = None\n\n    def test_addexistingcampaign(self, setup, login_fixture):\n        self.driver = setup\n        self.cp = CampaignObjects(self.driver)\n        self.cp.clickcampaignmenu()\n        self.cp.clickonaddcampaign()\n        self.cp.addcampaigntitle(\"This test title\")\n        self.cp.addcampaigndescription(\"This test description\")\n        self.cp.addcampaignstartdate(year=2025, month=5, day=4)\n        self.cp.addcampaignenddate(year=2025, month=6, day=4)\n        self.cp.selectcampaignreward(\"CPA REWARD Configuration\")\n        self.cp.selectcampaignpartnerprogram(\"Referral Program\")\n        self.cp.selectpartnertype(\"Referral\")\n        self.cp.selectpartnertier(\"Registered Partner\")\n        self.cp.selectpartner(\"Absc pvt ltd\")\n        self.cp.addgoaltitle(\"Test Goal\")\n        self.cp.selectaction(\"Login\")\n        self.cp.adddestinationlink(\"test.com\")\n        self.cp.clicksavecampaign()\n        message = self.cp.get_toast_message()\n        print(message)\n>       assert message == \"Campaign created successfully\", \"Error occurred while adding campaign\"\nE       AssertionError: Error occurred while adding campaign\nE       assert 'Campaign wit...ready exists.' == 'Campaign cre... successfully'\nE         \nE         - Campaign created successfully\nE         + Campaign with title This test title already exists.\n\nTestCases\\test_campaign.py:54: AssertionError"}, "attachments": [{"name": "Screenshot After Execution", "source": "fc274e6d-2b65-488f-aa60-1be992ea3926-attachment.png", "type": "image/png"}, {"name": "stdout", "source": "873d960c-bd63-4863-9a6f-077a99d5d507-attachment.txt", "type": "text/plain"}], "start": 1745762022801, "stop": 1745762053812, "uuid": "87fed0da-77e2-4a8e-bd3d-06c4d1e528fb", "historyId": "6b7b10b3be4641bb7d69e04d71eae6df", "testCaseId": "6b7b10b3be4641bb7d69e04d71eae6df", "fullName": "TestCases.test_campaign.Test_campaign#test_addexistingcampaign", "labels": [{"name": "parentSuite", "value": "TestCases"}, {"name": "suite", "value": "test_campaign"}, {"name": "subSuite", "value": "Test_campaign"}, {"name": "host", "value": "SF-LAP-501"}, {"name": "thread", "value": "9640-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCases.test_campaign"}]}